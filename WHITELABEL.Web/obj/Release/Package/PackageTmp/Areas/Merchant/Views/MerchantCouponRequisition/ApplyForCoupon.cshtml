@model WHITELABEL.Data.Models.TBL_COUPON_TRANSFER_LOGS
@using WHITELABEL.Data.Models
@using WHITELABEL.Web.Helper;
@{
    ViewBag.Title = "Requisition for coupon purchase";
    Layout = "~/Areas/Merchant/Views/Shared/_RetailerLayout.cshtml";
}

@using (Ajax.BeginForm("PostMerchantCouponStockRequisition", "MerchantCouponRequisition", new AjaxOptions { Confirm = "Do you want to appply coupon", OnSuccess = "OnSuccessMerchantCouponStock", OnFailure = "OnFailureMerchantCouponStock", LoadingElementId = "progressMerchantCouponStock" }, new { area = "Merchant", @id = "ApplyForCoupon" }))
{
    <div class="form-horizontal padding-top-20">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.SLN)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div style="background-color:#ccc; border-radius:5px; color:#3e50b4; padding:5px 20px 10px 20px; margin-bottom:20px;" class="col-md-12"><h3 style="color:#3e50b4"><i class="fas fa-angle-double-right"></i> Requisition for coupon purchase</h3></div>
            @Html.HiddenFor(model => model.FROM_MEMBER)
            @Html.HiddenFor(model => model.SLN)
            <div class="col-md-12">
                <div class="card">
                    <div class="panel-heading">
                    </div><!--.panel-heading-->
                    <div class="card-body">

                        <div class="clearfix"></div>
                        <div class="row ">
                            <div class=" col-md-3"> </div>
                            <div class="col-md-6">
                                <div>
                                    <div class="form-group row">
                                        <label class="control-label col-md-3" style="text-align:left;">Requisition Date</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                @{
                                                    DateTime date = DateTime.Now;
                                                    DateTime min = date.AddYears(-10);
                                                    DateTime max = date.AddYears(10);
                                                }
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.REQUEST_DATE, "{0:dd/mm/yyyy}", new { htmlAttributes = new { @class = "form-control date", id = "txtMerchantReqRequisition", type = "text" } })
                                                </div>
                                                <span><small> @Html.ValidationMessageFor(model => model.REQUEST_DATE, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <div class="form-group row">
                                        <label class="control-label col-md-3" style="text-align:left;">Coupon Type</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="md-form">
                                                    @Html.DropDownListFor(model => model.COUPON_Name, new SelectList((ViewBag.BankInformation) as SelectList, "Text", "Text"), "Select Coupon", new { id = "ddlcoupontype", @class = "form-control" })
                                                    <span><small>@Html.ValidationMessageFor(model => model.COUPON_Name, "", new { @class = "text-danger" })</small></span>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <div>
                                    <div class="form-group row">
                                        <label class="control-label col-md-3" style="text-align:left;">Quantity</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="md-form">

                                                    @Html.EditorFor(model => model.QTY, new { htmlAttributes = new { @class = "form-control", @placeholder = "XXX", id = "txtcouponQUantity", } })
                                                </div>
                                                <span><small>@Html.ValidationMessageFor(model => model.QTY, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <div class="form-group row">
                                        <label class="control-label col-md-3" style="text-align:left;">Remarks </label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="md-form">
                                                    @Html.EditorFor(model => model.REMARKS, new { htmlAttributes = new { @class = "form-control", @placeholder = "Transaction Details" } })
                                                </div>
                                                <span><small>@Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>
                            <div class="col-md-3"></div>

                        </div><!--.row-->
                    </div><!--.panel-body-->

                    <div class="card-footer">

                        <div class="col-lg-12 text-center">
                            @if (ViewBag.checkbank == "0")
                            {
                                <input type="submit" value="Proceed" class="btn btn-primary" />
                            }
                            else
                            {
                                <input type="submit" value="Proceed" class="btn btn-primary" />
                            }

                        </div>
                        <div class="clearfix"></div>
                    </div>

                </div><!--.panel-->
            </div><!--.col-md-12-->
        </div>

    </div>

}

<div class="preloader hidden" id="progressMerchantCouponStock">
    <div id="loading"></div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#progressMerchantCouponStock').removeClass("hidden");
        $('#progressMerchantCouponStock').hide();
        //$("#ddlcoupontype").change(function () {
        //    $.ajax({
        //        type: 'POST',
        //        url: "/Super/SuperStockRequisition/GetCouponPrice",
        //            dataType: 'json',
        //                data: { couponid: $("#ddlcoupontype").val() },
        //    success: function (response) {
        //        debugger;
        //        $('#divBindprice').html(response.vendor_coupon_price);
        //        $('#hdncouponprice').val(response.vendor_coupon_price);
        //    },
        //    error: function (ex) {
        //        //alert('Failed to retrieve data.' + ex);
        //    }
        //});
        //});
        //$("#txtcouponQUantity").keyup(function () {
        //    debugger;
        //    var Amount = $('#hdncouponprice').val();
        //    var Qty = $('#txtcouponQUantity').val();
        //    var Price = Amount * Qty;
        //    $('#txtcouponprice').val(Price);
        //});
})
    function OnSuccessMerchantCouponStock(response) {
        var message = response; debugger;
        bootbox.alert({
            message: message,
            size: 'small',
            callback: function () {
                console.log(message);
                var url = "/Merchant/MerchantCouponRequisition/Index";
                window.location.href = url;
            }
        })
        $("#ADDCouponStock").trigger("reset");
        //callGeocodeMobile();
        //alert(message);
    }
    function OnFailureMerchantCouponStock(response) {
        alert("Error occured.");
    }
</script>
<script>
    $(document).ready(function () {

    });
    $(function () {
        $('#txtMerchantReqRequisition').datepicker({
            format: "dd-MM-yyyy",
            language: "es",
            autoclose: true,
            todayHighlight: true,
            changeMonth: true,
            changeYear: true
        });

    });


</script>


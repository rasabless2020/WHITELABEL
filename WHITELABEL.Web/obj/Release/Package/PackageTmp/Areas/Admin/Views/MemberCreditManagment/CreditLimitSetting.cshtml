@model WHITELABEL.Data.Models.TBL_CREDIT_LIMIT_BALANCE_DISTRIBUTION
@{
    ViewBag.Title = "Credit Limit Setting";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<link href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" rel="stylesheet">
<script src="http://code.jquery.com/jquery-2.2.4.js"></script>
<script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
@*<script src="~/Areas/Admin/AdminHelperJS/DebitCreditJs/CreditWalletJS.js"></script>*@
@using (Ajax.BeginForm("PostCREDITLIMITBALANCE", "MemberCreditManagment", new AjaxOptions { Confirm = "Do you want to give credit limit to distributor", OnSuccess = "OnSuccessCreditLimitDistributor", OnFailure = "OnFailureCreditLimitDistributor", LoadingElementId = "progressCreditLimitDistributor" }, new { area = "Admin", @id = "ADDCreditLimitDISTRIBUTOR" }))
{
    <div class="form-horizontal">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.SLN)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="clearfix">
            
            <div class="col-md-12">
                <div class=" card">
                    <div class="card-body">
                        <div class="panel-heading">
                        </div><!--.panel-heading-->
                        <div class="panel-body">
                            <div class="row ">
                                <div class="col-md-3"></div>
                                <div class="col-md-6">
                                    <div class="col-md-12" style="margin-top:20px;">
                                        <div class="form-group row">
                                            <label class="control-label col-md-3" style="text-align:left;">Select Distributor</label>
                                            <div class="col-md-9">
                                                <div class="inputer">
                                                    <div class="md-form">
                                                        @Html.EditorFor(m => m.FromUser, new { htmlAttributes = new { @id = "txtMemberaName", style = " width:100%; padding:5px;", placeholder = "Distributor User Name", @class = "form-control" } })
                                                        @Html.HiddenFor(model => model.FROM_MEM_ID, new { id = "hfOperator" })
                                                        @*@Html.DropDownListFor(model => model.FROM_MEM_ID, new SelectList((ViewBag.MemberDetails) as SelectList, "Value", "Text"), "--Select Distributor--", new { id = "txtRoleDetails", @class = "form-control" })*@
                                                    </div>
                                                    <span class="help-block"><small>@Html.ValidationMessageFor(model => model.FROM_MEM_ID, "", new { @class = "text-danger" })</small></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group row">
                                            <label class="control-label col-md-3" style="text-align:left;">Reserved Credit Limit (PCL) </label>
                                            <div class="col-md-9">
                                                <div class="inputer">
                                                    <div class="md-form">
                                                        @Html.EditorFor(model => model.Reserved_credit_limit, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @readonly = "readonly", @id = "txtMerReservedCRLimitChe" } })
                                                    </div>
                                                    <span>@Html.ValidationMessageFor(model => model.Reserved_credit_limit, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group row">
                                            <label class="control-label col-md-3" style="text-align:left;">Credit Balance Amount</label>
                                            <div class="col-md-9">
                                                <div class="inputer">
                                                    <div class="md-form">
                                                        @Html.EditorFor(model => model.CREDIT_AMOUNT, new { htmlAttributes = new { @class = "form-control", @placeholder = "" } })
                                                    </div>
                                                    <span>@Html.ValidationMessageFor(model => model.CREDIT_AMOUNT, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group row">
                                            <label class="control-label col-md-3" style="text-align:left;">Credit Balance Note</label>
                                            <div class="col-md-9">
                                                <div class="inputer">
                                                    <div class="md-form">
                                                        @Html.TextAreaFor(model => model.CREDIT_NOTE_DESCRIPTION, 5, 54, new { htmlAttributes = new { @class = "form-control", @style = "border-radius:5px", @placeholder = "Description" } })
                                                    </div>
                                                    <span class="help-block"><small>@Html.ValidationMessageFor(model => model.CREDIT_NOTE_DESCRIPTION, "", new { @class = "text-danger" })</small></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <div class="form-group row">
                                            <label class="control-label col-md-3"></label>
                                            <div class="col-md-9">
                                                <div class="inputer" style="text-align:center">
                                                    <input type="submit" value="Proceed" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="col-md-12" id="ddlGSTValue">
                        <div class="form-group row">
                            <label class="control-label col-md-3" style="text-align:left;">Is GST APPLY</label>
                            <div class="col-md-9">
                                <div class="inputer">
                                    <div class="input-wrapper">
                                        @Html.DropDownListFor(m => m.GSTAPPLY, new List<SelectListItem>
                                                                { new SelectListItem{Text="Yes", Value="Yes"},
                                                                    new SelectListItem{Text="No", Value="No"}},
                                                                    "--Select--", new { id = "GSTMethod", @class = "form-control" })

                                        <span>@Html.ValidationMessageFor(model => model.GSTAPPLY, "", new { @class = "text-danger" })</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group row">
                            <label class="control-label col-md-3" style="text-align:left;">Is TDS APPLY</label>
                            <div class="col-md-9">
                                <div class="inputer">
                                    <div class="input-wrapper">
                                        @Html.DropDownListFor(m => m.TDSAPPLY, new List<SelectListItem>
                                                                { new SelectListItem{Text="Yes", Value="Yes"},
                                                                    new SelectListItem{Text="No", Value="No"}},
                                                                    "--Select--", new { id = "TDSMethod", @class = "form-control" })

                                        <span>@Html.ValidationMessageFor(model => model.TDSAPPLY, "", new { @class = "text-danger" })</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@

                                </div>
                                <div class="col-md-3"></div>
                            </div><!--.row-->
                        </div><!--.panel-body-->
                    </div>
                    
                </div><!--.panel-->
            </div><!--.col-md-12-->
        </div>
    </div>
}
<div class="preloader hidden" id="progressCreditLimitDistributor" style="display:none;">
    <div id="loading"></div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#progressCreditLimitDistributor').removeClass("hidden");
        $('#progressCreditLimitDistributor').hide();
    })
    function OnSuccessCreditLimitDistributor(response) {
        var message = response;
        $("#ADDCreditLimitDISTRIBUTOR").trigger("reset");
        bootbox.alert({
            message: message,
            size: 'small',
            callback: function () {
                console.log(message);
                var url = "/Admin/MemberCreditManagment/GetCreditLimitList";
                window.location.href = url;
            }
        });      
    }
    function OnFailureCreditLimitDistributor(response) {
        alert("Error occured.");
    }
</script>


<script>
    $(document).ready(function () {
        $("#txtMemberaName").autocomplete({
            source: function (request, response) {
                //var MEm_Type = $('#txtRoleDetails').val();
                $.ajax({
                    url: '/Admin/MemberCreditManagment/GetDistributorMemberName/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            focus: function (event, ui) {
                $('#txtMemberaName').val(ui.item.label);
                return true;
            },
            select: function (e, i) {
                $("#hfOperator").val(i.item.val);
                return true;
            },
            minLength: 1
        });

        $("#ddlCreditNoteType").change(function () {
            var getvalue = $('#ddlCreditNoteType').val();
            if (getvalue == 'DR') {
                $('#ddlGSTValue').show();
            }
            else {
                $('#ddlGSTValue').hide();
            }
        });
    });

    $("#txtMemberaName").change(function () {
        var MEM_ID = $('#hfOperator').val();
        
        $.ajax({
            url: "/MemberCreditManagment/GetReservedCreditLimit?area=Merchant",
            data: {
                Mem_ID: MEM_ID
            },
            type: "post",
            datatype: "json",
            beforesend: function () {
            },
            success: function (data) {
                
                if (data == "0") {
                    $('#txtMerReservedCRLimitChe').text("0");
                }
                else {
                    //var AvailableBal = data.CLOSING;                   
                    var ReservedCreditLimitAmt = data.RESERVED_CREDIT_LIMIT;

                    $('#txtMerReservedCRLimitChe').val(ReservedCreditLimitAmt);
                }
            },
            error: function (xhr, status, error) {
                console.log(status);
            }
        });
    });

</script>
@model WHITELABEL.Data.Models.TBL_DEBIT_CREDIT_SETTIING
@{
    ViewBag.Title = "Apply Issue Debit Credit Note";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Areas/Admin/AdminHelperJS/DebitCreditJs/Index.js"></script>
@using (Ajax.BeginForm("POSTApplyIssueDebitCreditNote", "MemberIssueDebitCreditNote", new AjaxOptions { Confirm = "You are sure for issue debit/credit note ???", OnSuccess = "OnSuccessDistributor", OnFailure = "OnFailureDistributor", LoadingElementId = "progressDistributor" }, new { area = "Admin", @id = "ApplyIssueDebitCreditNote" }))
{
    <div class="form-horizontal padding-top-20">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.SLN)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12 row headcolor">
                    <div class="col-md-4" style="text-align:left; padding-top:3px;"><i class="fa fa-list fa-3x"></i></div>
                    <div class="col-md-4"></div>
                    <div class="col-md-4" style="text-align:right; padding-top:10px;">
                        <h3>
                            Issue Credit/Debit Note
                        </h3>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12 row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Note Type</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.DropDownListFor(m => m.TRANS_TYPE, new List<SelectListItem>
                                                                            { new SelectListItem{Text="Debit Note", Value="DR"},
                                                                                new SelectListItem{Text="Credit Note", Value="CR"}},
                                                                                "--Select--", new { id = "ddlTRANS_TYPE", @class = "form-control" })

                                                    <span>@Html.ValidationMessageFor(model => model.TRANS_TYPE, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Debit/credit Apply For </label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.DropDownListFor(model => model.TRANS_REMARKS, new SelectList((ViewBag.GetRemarks) as SelectList, "Value", "Text"), "--Select Debit/credit Apply For--", new { id = "ddlDebitCreditRemarks", @class = "form-control" })
                                                    <span>@Html.ValidationMessageFor(model => model.TRANS_REMARKS, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Debit/Credit Apply To</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.DropDownListFor(model => model.MEM_TYPE, new SelectList((ViewBag.RoleDetails) as SelectList, "Value", "Text"), "--Select Member Type--", new { id = "ddlRoleDetails", @class = "form-control" })
                                                </div>
                                                <span class="help-block"><small>@Html.ValidationMessageFor(model => model.MEM_TYPE, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Debit/Credit Ref No</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.EditorFor(model => model.TRANS_REF_NO, "0", new { htmlAttributes = new { @class = "form-control", @placeholder = "Reference No", id = "txtReferenceNumber", maxlength = 10 } })
                                                </div>
                                                <span class="help-block"><small>@Html.ValidationMessageFor(model => model.TRANS_REF_NO, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="divMainMember">
                            <div class="col-md-12 row">

                                <div class="col-md-6" id="divDistributor">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Distributor Name</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                @Html.DropDownListFor(model => model.DIST_ID, new SelectList((ViewBag.GetDistributor) as SelectList, "Value", "Text"), "Select Distributor", new { id = "ddlDistributorList", @class = "form-control" })
                                                <span class="help-block"><small>@Html.ValidationMessageFor(model => model.MEM_TYPE, "", new { @class = "text-danger" })</small></span>

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6" id="divMerchant">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Merchant Name</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.DropDownList("MemberService", new SelectList(string.Empty, "Value", "Text"), "--Select Merchant--", new { @class = "form-control", id = "ddlMerchantList" })
                                                    @Html.HiddenFor(model => model.MER_ID, new { id = "ddlMerchantId_Val" })
                                                    @*@Html.DropDownListFor(model => model.MER_ID, new SelectList((ViewBag.GetMerchant) as SelectList, "Value", "Text"), "Select Merchant", new { id = "ddlMerchantList", @class = "form-control" })*@
                                                </div>
                                                <span class="help-block"><small>@Html.ValidationMessageFor(model => model.MEM_TYPE, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 row">
                                
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Transaction Date</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.EditorFor(model => model.TRANS_DATE, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control date", id = "txtTransactionDate", @placeholder = "MM/DD/YYYY", @onkeydown = "return false;" } })
                                                </div>
                                                <span class="help-block"><small>@Html.ValidationMessageFor(model => model.TRANS_DATE, "", new { @class = "text-danger" })</small></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12 row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Transaction Amount</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.EditorFor(model => model.TRANS_AMOUNT, "0", new { htmlAttributes = new { @class = "form-control", @placeholder = "Transaction Amount", id = "txtReferenceNumber", maxlength = 10 } })

                                                    <span>@Html.ValidationMessageFor(model => model.TRANS_AMOUNT, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">Transaction Details</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.EditorFor(model => model.TRANS_DETAILS, "0", new { htmlAttributes = new { @class = "form-control", @placeholder = "Transaction Details", id = "txtReferenceNumber", maxlength = 500 } })

                                                    <span>@Html.ValidationMessageFor(model => model.TRANS_DETAILS, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">GST Application</label>
                                        <div class="col-md-9">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.DropDownListFor(m => m.GST_APPLICABLE_VALUE, new List<SelectListItem>
                                                                          { new SelectListItem{Text="Yes", Value="1"},
                                                                              new SelectListItem{Text="No", Value="0"}},
                                                                              new { id = "ddlGstApplication", @class = "form-control" })
                                                    @*"--Select--", new { id = "ddlGstApplication", @class = "form-control" })*@
                                                    <span>@Html.ValidationMessageFor(model => model.GST_APPLICABLE, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label class="control-label col-md-3">TDS Applicable</label>
                                        <div class="col-md-3">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.DropDownListFor(m => m.TDS_APPLICABLE_VALUE, new List<SelectListItem>
                                                                          { new SelectListItem{Text="Yes", Value="1"},
                                                                              new SelectListItem{Text="No", Value="0"}},
                                                                              "--Select--", new { id = "ddlTDSApplication", @class = "form-control" })

                                                    <span>@Html.ValidationMessageFor(model => model.TDS_APPLICABLE, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="inputer">
                                                <div class="input-wrapper">
                                                    @Html.EditorFor(model => model.TDS_AMOUNT, "0", new { htmlAttributes = new { @class = "form-control", @placeholder = "TDS Value", id = "txtTDSPercentage", maxlength = 3 } })

                                                    <span>@Html.ValidationMessageFor(model => model.TDS_AMOUNT, "", new { @class = "text-danger" })</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div><!--.panel-->
                    <div class="card-footer">
                        <div class="col-md-12 text-center">
                            <input type="submit" value="Apply Debit/Credit" class="btn btn-primary" />
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div><!--.col-md-12-->
        </div>

    </div>
    <script>
        $(document).ready(function () {
            $('#divMainMember').hide();
            $("#txtTDSPercentage").prop('disabled', true);
            window.setTimeout(function () {
                $("#informationMessage").fadeOut('slow');
            }, 3000);
        });
    </script>
}
<div class="preloader hidden" id="progressDistributor" style="display:none;">
    <div id="loading"></div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $('#progressDistributor').removeClass("hidden");
        $('#progressDistributor').hide();
    })
    function OnSuccessDistributor(response) {
        var message = response;
        debugger;
            $("#ApplyIssueDebitCreditNote").trigger("reset");
            bootbox.alert({
                message: message,
                size: 'small',
                callback: function () {
                    var url = "/Admin/MemberIssueDebitCreditNote/Index";
                    window.location.href = url;
                    console.log(message);
                }
            })
        //callGeocodeMobile();
        //alert(message);
    }
    function OnFailureDistributor(response) {
        alert("Error occured.");
    }
</script>
<script type="text/javascript">
    function myDistrFunction() {
        debugger;
        var x = document.getElementById("Distpassword");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
    $(document).ready(function () {
        $('#Distpassword').attr('type', 'password');
    });
</script>
<script>    
    $(function () {
        $('#txtTransactionDate').datepicker({
            format: "dd-MM-yyyy",
            language: "es",
            autoclose: true,
            todayHighlight: true,
            changeMonth: true,
            changeYear: true
        });
    });
</script>
@*<script>
    $(document).on('change', '#ddlRoleDetails', function () {        
        var GetRole = $("#ddlRoleDetails").val();
        if (GetRole == "4") {
            $('#divMainMember').show();
            $('#divDistributor').show();
            $('#divMerchant').hide();
        }
        else if (GetRole == "5") {
            $('#divMainMember').show();
            $('#divDistributor').show();
            $('#divMerchant').show();
        }
        else {
            $('#divMainMember').hide();
        }
    });
    $(document).on('change', '#ddlTDSApplication', function () {
        debugger;
        var GetTDS = $("#ddlTDSApplication").val();
        if (GetTDS == "1") {
            $("#txtTDSPercentage").prop('disabled', false);            
        }        
        else {
            $("#txtTDSPercentage").prop('disabled', true);
        }
    });

    $(document).ready(function () {
        $("#ddlDistributorList").change(function () {
            $("#ddlMerchantList").empty();
            //$("#MemberList").val("--Select--");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetAdminMerchant")',
                    dataType: 'json',
                    data: { Disid: $("#ddlDistributorList").val() },
                    success: function (states) {
                        $("#ddlMerchantList").append('<option selected value="">--Select Merchant--</option>');
                        $.each(states, function (i, state) {
                            $("#ddlMerchantList").append('<option value="' + state.IDValue + '">' +
                                state.TextValue + '</option>');
                        });
                    },
                    error: function (ex) {
                        $("#MemberList").append('<option selected value="">--Select Super--</option>');
                        //alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
            })
    });
    $(document).on('change', '#ddlMerchantList', function () {
        debugger;
        var GetMer_ID = $("#ddlMerchantList").val();
        $('#ddlMerchantId_Val').val(GetMer_ID);
    });    
$(function () {

    $('#txtReferenceNumber').on('input blur change keyup', function () {
        //debugger;
        if ($(this).val().length != 0) {
            var token = $(':input[name="__RequestVerificationToken"]').val();
            $.ajax({                
                url: '/MemberIssueDebitCreditNote/CheckReferenceNo?area=Admin',
                data: {
                    referenceno: $(this).val(),
                    __RequestVerificationToken: token
                },
                cache: false,
                type: "POST",
                success: function (data) {                    
                    if (data.result == "available") {
                        $('#txtReferenceNumber').css('border', '3px #090 solid');
                    }
                    else {
                        $('#txtReferenceNumber').css('border', '3px #C33 solid');                       
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    alert("message : \n" + "An error occurred" + "\n status : \n" + status + " \n error : \n" + error);
                }
            });
        }
        else {            
        }
    });

});


</script>*@

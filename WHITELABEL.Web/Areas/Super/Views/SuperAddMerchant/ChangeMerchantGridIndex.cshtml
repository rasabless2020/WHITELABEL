@using NonFactors.Mvc.Grid;
@using WHITELABEL.Web.Helper;
@model IEnumerable<WHITELABEL.Data.Models.TBL_MASTER_MEMBER>
@{
    ViewBag.Title = "ChangeDistributorGridIndex";
    Layout = null;
}


@(Html
                                            .Grid(Model)
                                            .Build(columns =>
                                            {
                                                columns.Add(model => model.SUPER_ID).Titled("Distributor ID").Filterable(true).Sortable(true);
                                                columns.Add(model => model.SuperName).Titled("Distributor Name").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEM_ID).Titled("Merchant Id").Filterable(true).Sortable(true);
                                                columns.Add(model => model.UName).Titled("Merchant Name").Filterable(true).Sortable(true);
                                                columns.Add(model => model.EMAIL_ID).Titled("Email").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEMBER_MOBILE).Titled("Mobile No").Filterable(true).Sortable(true);
                                                columns.Add(model => model.JOINING_DATE).Titled("Join Date").Filterable(true).Sortable(true);
                                                columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Action")
                                                    .RenderedAs(model => "<div style='text-align:center'><a href='#' data-toggle='modal' data-target='.transdMerchantDistId' id='transactionMerchantDistid' onclick='GetMerchantInformation(" + model.MEM_ID + ");' style='margin-right:10px' title='Edit'><i class='fa fa-edit'></i></a></div>");
                                    //columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Action")
                                    //    //.RenderedAs(model => "<div style='text-align:center'><a href='" + @Url.Action("CreateMember", "PowerAdminMember", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' style='margin-right:10px' title='Edit'><i class='fa fa-edit'></i></a><a href='" + @Url.Action("HostingDetails", "PowerAdminHosting", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' style='margin-right:10px' title='Hosting'><i class='fa fa-server'></i></a><a href='" + @Url.Action("ServiceDetails", "PowerAdminService", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' style='margin-right:10px' title='Service'><i class='fa fa-cogs'></i></a></div>");
                                    //    .RenderedAs(model => "<div>&nbsp;<a href='" + @Url.Action("CreateMember", "MemberAPILabel", new { area = "Admin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' Title='Edit' style='margin-right:10px;'><i class='fa fa-edit'></i></a><a href='" + @Url.Action("ServiceDetails", "MemberService", new { area = "Admin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' title='Services'><i class='fa fa-cogs'></i></a></div>");
                                    //columns.Add(model => (model.ACTIVE_MEMBER == true ? "Active" : "Deactive")).Titled("Status").Css("<style>.table - hover tbody tr: hover {background - color:red;}</style> ").Filterable(true).Sortable(true);


                                })
                                            .Empty("No data found")
                                            .Id("my-ajax-grid")
                                            .Pageable(pager =>
                                            {
                                                pager.PagesToDisplay = 5;
                                                pager.RowsPerPage = 5;
                                            })
                                            .Filterable()
                                            .Sortable()
)


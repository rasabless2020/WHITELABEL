@using NonFactors.Mvc.Grid;
@using WHITELABEL.Web.Helper;
@*@model IGrid<WHITELABEL.Data.Models.TBL_MASTER_MEMBER>*@
@model IEnumerable<WHITELABEL.Data.Models.TBL_MASTER_MEMBER>
@{
    ViewBag.Title = "IndexGrid";
    //Layout = "~/Areas/PowerAdmin/Views/Shared/_PowerAdminLayout.cshtml";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
@*@(new HtmlGrid<WHITELABEL.Data.Models.TBL_MASTER_MEMBER>(Html, Model))*@



@(Html
                            .Grid(Model)
                            .Build(columns =>
                            {
                                columns.Add(model => model.EMAIL_ID).Titled("Email").Filterable(true).Sortable(true);
                                columns.Add(model => model.MEMBER_NAME).Titled("Name").Filterable(true).Sortable(true);
                                columns.Add(model => model.COMPANY).Titled("Company").Filterable(true).Sortable(true);
                                columns.Add(model => model.MEMBER_MOBILE).Titled("Mobile").Filterable(true).Sortable(true);
                                columns.Add(model => model.BLOCKED_BALANCE).Titled("Balance").Filterable(true).Sortable(true);
                                columns.Add(model => model.MEM_ID).Titled("").Encoded(false).Filterable(false).Sortable(false).Titled("Password")
                             .RenderedAs(model => "<div style='text-align:center'><a href='javascript:void(0)' onclick='SendMailToMember(" + model.MEM_ID + ");return 0;' title='Password'><i class='fa fa-key'></i></a> <a href='javascript:void(0);' onclick='GetPassword(" + model.MEM_ID + ");'><i class='fa fa-eye'></i></a></div>");

                                columns.Add(model => model.SECURITY_PIN_MD5).Titled("M Pin").Filterable(true).Sortable(true);

                                columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Action")
                                    //.RenderedAs(model => "<div class='btn-group btn-group-xs' style='width:200px'><a href='" + @Url.Action("CreateMember", "PowerAdminMember", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' class='btn btn-primary'>Edit</a><a href='" + @Url.Action("HostingDetails", "PowerAdminHosting", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' class='btn btn-primary'>Hosting</a><a href='" + @Url.Action("ServiceDetails", "PowerAdminService", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' class='btn btn-primary'>Service</a></div>");
                                    .RenderedAs(model => "<div style='text-align:center'><a href='" + @Url.Action("CreateMember", "PowerAdminMember", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' style='margin-right:10px' title='Edit'><i class='fa fa-edit'></i></a><a href='" + @Url.Action("HostingDetails", "PowerAdminHosting", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' style='margin-right:10px' title='Hosting'><i class='fa fa-server'></i></a><a href='" + @Url.Action("ServiceDetails", "PowerAdminService", new { area = "PowerAdmin", memid = Encrypt.EncryptMe(model.MEM_ID.ToString()) }) + "' style='margin-right:10px' title='Service'><i class='fa fa-cogs'></i></a></div>");
                                columns.Add(model => (model.ACTIVE_MEMBER == true ? "Active" : "Deactive")).Titled("Status").Css("<style>.table - hover tbody tr: hover {background - color:red;}</style> ").Filterable(true).Sortable(true);

                                columns.Add(model => model.MEM_ID).Encoded(false).Filterable(false).Sortable(false).Titled("Action")
                              //.RenderedAs(model => "<a href='javascript:void(0)' class='"+ (model.ACTIVE_MEMBER == true ? "btn btn-success" : "btn btn-danger") + "' onclick='MemberStatus(\"" + model.MEM_ID + "\",\"" + model.ACTIVE_MEMBER + "\");'>" + (model.ACTIVE_MEMBER == true ? "<i class='fa fa-toggle-on'></i>" : "<i class='fa fa-toggle-off'></i>") + "</a>");
                              .RenderedAs(model => "<div style='text-align:center'><a href='javascript:void(0)' onclick='MemberStatus(\"" + model.MEM_ID + "\",\"" + model.ACTIVE_MEMBER + "\");' title='"+ (model.ACTIVE_MEMBER == true ? "Active" : "Deactive") + "'>" + (model.ACTIVE_MEMBER == true ? "<span style='color:green;'><i class='fa fa-toggle-on fa-2x'></i></span>" : "<span style='color:red;'><i class='fa fa-toggle-off fa-2x'></i></span>") + "</a></div>");

                                //columns.Add(model => model.MEM_ID).Titled("").Encoded(false).Filterable(false).Sortable(false).Titled("Action")  
                                //                .RenderedAs(model => "<input type='checkbox' data-toggle='toggle' id='" + model.MEM_ID + "' onchange='MemberStatus(\"" + model.MEM_ID + "\",\"" + model.ACTIVE_MEMBER + "\");' data-on='" + (model.ACTIVE_MEMBER == true ? "Disabled" : "Enabled") + "' data-off='" + (model.ACTIVE_MEMBER == true ? "Disabled" : "Enabled") + "'>");

                                //columns.Add(model => model.MEM_ID).Titled("").Encoded(false).Filterable(false).Sortable(false).Titled("Action")
                                //                .RenderedAs(model => "<input type='checkbox' data-toggle='toggle' data-on='Enabled' data-off='Disabled'>");


                            })
                            .Empty("No data found")
                            .Id("my-ajax-grid")
                            .Pageable(pager =>
                            {
                                pager.PagesToDisplay = 5;
                                pager.RowsPerPage = 5;
                            })
                            .Filterable()
                            .Sortable()
)



@*<style>
        .RowColorchange {
            background-color: sandybrown;
        }
    </style>*@


@*<script type="text/javascript">
        $('input:checkbox').change(function () {
            $('#console-event').html('Toggle: ' + $(this).prop('checked'));
            console.log("Change event: " + this.id);
            alert(this.id);
        })
    </script>*@

@*<script>
        $(function () {
            $('#toggle-two').bootstrapToggle({
                on: 'Enabled',
                off: 'Disabled'
            });
        })
    </script>*@





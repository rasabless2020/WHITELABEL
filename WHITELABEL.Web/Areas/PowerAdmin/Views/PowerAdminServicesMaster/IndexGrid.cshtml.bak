@using NonFactors.Mvc.Grid;
@using WHITELABEL.Web.Helper;
@model IEnumerable<WHITELABEL.Data.Models.TBL_SETTINGS_SERVICES_MASTER>
@{
    ViewBag.Title = "IndexGrid";
    //Layout = "~/Areas/Merchant/Views/Shared/_MerchantLayout.cshtml";
}
@(Html
                                .Grid(Model)
                                .Build(columns =>
                                {
                                    columns.Add(model => model.SERVICE_NAME).Titled("Service Name");

                                    columns.Add(model => model.SERVICE_DESC).Titled("Service Description");//columns.Add(model => model.ACTIVE_SERVICE).Titled("Active Service");
                                    columns.Add(model => model.UPDATED_ON).Titled("Create Date");//columns.Add(model => model.ACTIVE_SERVICE).Titled("Active Service");
                                    columns.Add(model => model.ACTIVESTATUS).Titled("Status");//columns.Add(model => model.ACTIVE_SERVICE).Titled("Active Service");
                                    columns.Add(model => model.SLN).Titled("Action").Encoded(false).Filterable(false).Sortable(false)
                                    .RenderedAs(model => "<div style='text-align:center'><a href='" + @Url.Action("AddService", "PowerAdminServicesMaster", new { area = "PowerAdmin", ServiceId = Encrypt.EncryptMe(model.SLN.ToString()) }) + "' title='Edit'><i class='fa fa-edit'></i></a></div>");
                                    //.RenderedAs(model => "<a href='" + @Url.Action("AddService", "PowerAdminServicesMaster", new { area = "PowerAdmin", ServiceId = Encrypt.EncryptMe(model.SLN.ToString()) }) + "' class='btn btn-primary btn-xs'>Edit</a> &nbsp; <div class='btn-group btn-group-xs'> &nbsp;&nbsp;&nbsp;  <a href='javascript:void(0)' class='btn btn-danger' onclick='DeactivateOperator(" + model.SLN + ")'>"+ (model.ACTIVESTATUS == true ? "Deactive" : "Active") + "</a></div>");
                                })
                                .Empty("No data found")
                                .Id("my-ajax-grid")
                                .Pageable(pager =>
                                {
                                    pager.PagesToDisplay = 6;
                                    pager.RowsPerPage = 6;
                                })
                                .Filterable()
                                .Sortable()
)

